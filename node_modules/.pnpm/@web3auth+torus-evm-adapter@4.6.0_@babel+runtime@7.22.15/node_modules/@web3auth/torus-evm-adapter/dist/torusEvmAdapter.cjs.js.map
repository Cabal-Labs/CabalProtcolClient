{"version":3,"file":"torusEvmAdapter.cjs.js","mappings":"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","sources":["webpack://@web3auth/torus-evm-adapter/webpack/bootstrap","webpack://@web3auth/torus-evm-adapter/webpack/runtime/compat get default export","webpack://@web3auth/torus-evm-adapter/webpack/runtime/define property getters","webpack://@web3auth/torus-evm-adapter/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/torus-evm-adapter/webpack/runtime/make namespace object","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@toruslabs/torus-embed\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/torus-evm-adapter/external commonjs2 \"@web3auth/base-evm-adapter\"","webpack://@web3auth/torus-evm-adapter/./src/torusWalletAdapter.ts","webpack://@web3auth/torus-evm-adapter/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/torus-embed\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base-evm-adapter\");","import Torus, { LoginParams, NetworkInterface, TorusCtorArgs, TorusParams } from \"@toruslabs/torus-embed\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapterSettings,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseEvmAdapter } from \"@web3auth/base-evm-adapter\";\n\nexport interface TorusWalletOptions extends BaseAdapterSettings {\n  adapterSettings?: TorusCtorArgs;\n  loginSettings?: LoginParams;\n  initParams?: Omit<TorusParams, \"network\">;\n}\n\nexport class TorusWalletAdapter extends BaseEvmAdapter<never> {\n  readonly name: string = WALLET_ADAPTERS.TORUS_EVM;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.EIP155;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.EIP155;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public torusInstance: Torus | null = null;\n\n  private torusWalletOptions?: TorusCtorArgs;\n\n  private initParams?: TorusParams;\n\n  private loginSettings?: LoginParams = {};\n\n  constructor(params: TorusWalletOptions = {}) {\n    super(params);\n    this.torusWalletOptions = params.adapterSettings || {};\n    this.initParams = params.initParams || {};\n    this.loginSettings = params.loginSettings || {};\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    if (this.status === ADAPTER_STATUS.CONNECTED && this.torusInstance) {\n      return this.torusInstance.provider as unknown as SafeEventEmitterProvider;\n    }\n    return null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions = {}): Promise<void> {\n    await super.init(options);\n    super.checkInitializationRequirements();\n\n    const { chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName } = this.chainConfig as CustomChainConfig;\n    const network: NetworkInterface = {\n      chainId: Number.parseInt(chainId, 16),\n      host: rpcTarget,\n      blockExplorer,\n      networkName: displayName,\n      ticker,\n      tickerName,\n      // decimals: decimals || 18,\n    };\n\n    this.torusInstance = new Torus(this.torusWalletOptions);\n    log.debug(\"initializing torus evm adapter init\");\n    await this.torusInstance.init({\n      showTorusButton: false,\n      ...this.initParams,\n      network,\n    });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.TORUS_EVM);\n\n    try {\n      log.debug(\"initializing torus evm adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with torus evm provider\", error);\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.TORUS_EVM });\n    try {\n      await this.torusInstance.login(this.loginSettings);\n      const { chainId } = this.torusInstance.provider;\n      if (chainId && parseInt(chainId) !== parseInt((this.chainConfig as CustomChainConfig).chainId, 16)) {\n        const { chainId: _chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName } = this.chainConfig as CustomChainConfig;\n        const network: NetworkInterface = {\n          chainId: Number.parseInt(_chainId, 16),\n          host: rpcTarget,\n          blockExplorer,\n          networkName: displayName,\n          tickerName,\n          ticker,\n        };\n        // in some cases when user manually switches chain and relogin then adapter will not connect to initially passed\n        // chainConfig but will connect to the one that user switched to.\n        // So here trying to switch network to the one that was initially passed in chainConfig.\n        await this.torusInstance.setProvider({\n          ...network,\n        });\n        const updatedChainID = await this.torusInstance.ethereum.request<string>({ method: \"eth_chainId\" });\n        if (updatedChainID && parseInt(updatedChainID) !== parseInt((this.chainConfig as CustomChainConfig).chainId, 16)) {\n          throw WalletInitializationError.fromCode(\n            5000,\n            `Not connected to correct chainId. Expected: ${(this.chainConfig as CustomChainConfig).chainId}, Current: ${updatedChainID}`\n          );\n        }\n      }\n      this.status = ADAPTER_STATUS.CONNECTED;\n      this.torusInstance.showTorusButton();\n      this.emit(ADAPTER_STATUS.CONNECTED, { adapter: WALLET_ADAPTERS.TORUS_EVM, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_STATUS.ERRORED, error);\n      throw error instanceof Web3AuthError ? error : WalletLoginError.connectionError(\"Failed to login with torus wallet\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    await super.disconnectSession();\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    await this.torusInstance.logout();\n    this.torusInstance.hideTorusButton();\n    if (options.cleanup) {\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.torusInstance = null;\n    } else {\n      // ready to be connected again\n      this.status = ADAPTER_STATUS.READY;\n    }\n    await super.disconnect();\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    const userInfo = await this.torusInstance.getUserInfo(\"\");\n    return userInfo;\n  }\n}\n","export * from \"./torusWalletAdapter\";\n"],"names":["Torus","ADAPTER_CATEGORY","ADAPTER_EVENTS","ADAPTER_NAMESPACES","ADAPTER_STATUS","CHAIN_NAMESPACES","log","WALLET_ADAPTERS","WalletInitializationError","WalletLoginError","Web3AuthError","BaseEvmAdapter","TorusWalletAdapter","constructor","params","TORUS_EVM","EIP155","EXTERNAL","NOT_READY","torusWalletOptions","adapterSettings","initParams","loginSettings","provider","status","CONNECTED","torusInstance","_","Error","init","options","checkInitializationRequirements","chainId","blockExplorer","displayName","rpcTarget","ticker","tickerName","chainConfig","network","Number","parseInt","host","networkName","debug","showTorusButton","READY","emit","autoConnect","rehydrated","connect","error","ERRORED","checkConnectionRequirements","notReady","CONNECTING","adapter","login","_chainId","setProvider","updatedChainID","ethereum","request","method","fromCode","reconnected","connectionError","disconnect","cleanup","disconnectSession","logout","hideTorusButton","getUserInfo","notConnectedError","userInfo"],"sourceRoot":""}