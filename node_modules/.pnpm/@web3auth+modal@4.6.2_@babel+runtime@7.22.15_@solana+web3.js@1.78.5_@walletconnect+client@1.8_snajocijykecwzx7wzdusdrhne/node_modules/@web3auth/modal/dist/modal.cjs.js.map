{"version":3,"file":"modal.cjs.js","mappings":"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","sources":["webpack://@web3auth/modal/./src/config.ts","webpack://@web3auth/modal/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/core\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/ui\"","webpack://@web3auth/modal/./src/default.ts","webpack://@web3auth/modal/./src/utils.ts","webpack://@web3auth/modal/./src/modalManager.ts","webpack://@web3auth/modal/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/metamask-adapter\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/openlogin-adapter\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/phantom-adapter\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/torus-evm-adapter\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/torus-solana-adapter\"","webpack://@web3auth/modal/external commonjs2 \"@web3auth/wallet-connect-v1-adapter\"","webpack://@web3auth/modal/webpack/bootstrap","webpack://@web3auth/modal/webpack/runtime/compat get default export","webpack://@web3auth/modal/webpack/runtime/create fake namespace object","webpack://@web3auth/modal/webpack/runtime/define property getters","webpack://@web3auth/modal/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/modal/webpack/runtime/make namespace object","webpack://@web3auth/modal/./src/index.ts"],"sourcesContent":["import { CHAIN_NAMESPACES, EVM_ADAPTERS, SOLANA_ADAPTERS } from \"@web3auth/base\";\n\nimport { AdaptersModalConfig } from \"./interface\";\n\nexport const defaultSolanaDappModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.SOLANA,\n  adapters: {\n    [SOLANA_ADAPTERS.TORUS_SOLANA]: {\n      label: \"Torus Wallet\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [SOLANA_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [SOLANA_ADAPTERS.PHANTOM]: {\n      label: \"Phantom\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n\nexport const defaultEvmDappModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.EIP155,\n  adapters: {\n    [EVM_ADAPTERS.TORUS_EVM]: {\n      label: \"Torus Wallet\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [EVM_ADAPTERS.METAMASK]: {\n      label: \"MetaMask\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [EVM_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n    [EVM_ADAPTERS.WALLET_CONNECT_V1]: {\n      label: \"Wallet Connect\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n\nexport const defaultSolanaWalletModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.SOLANA,\n  adapters: {\n    [SOLANA_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n\nexport const defaultEvmWalletModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.EIP155,\n  adapters: {\n    [EVM_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n\nexport const defaultOtherModalConfig: AdaptersModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.OTHER,\n  adapters: {\n    [EVM_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true,\n    },\n  },\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/core\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/ui\");","import type { OPENLOGIN_NETWORK_TYPE, OpenLoginOptions } from \"@toruslabs/openlogin\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, getChainConfig, IAdapter, WALLET_ADAPTER_TYPE, WALLET_ADAPTERS } from \"@web3auth/base\";\n\n// warning: this function is not compatible with \"OTHER\" chain namespace.\nexport const getDefaultAdapterModule = async (params: {\n  name: WALLET_ADAPTER_TYPE;\n  clientId: string;\n  customChainConfig: Partial<CustomChainConfig> & Pick<CustomChainConfig, \"chainNamespace\">;\n  sessionTime?: number;\n  web3AuthNetwork?: OPENLOGIN_NETWORK_TYPE;\n}): Promise<IAdapter<unknown>> => {\n  const { name, customChainConfig, clientId, sessionTime, web3AuthNetwork } = params;\n  if (!Object.values(CHAIN_NAMESPACES).includes(customChainConfig.chainNamespace))\n    throw new Error(`Invalid chainNamespace: ${customChainConfig.chainNamespace}`);\n  const finalChainConfig = {\n    ...(getChainConfig(customChainConfig.chainNamespace, customChainConfig?.chainId) as CustomChainConfig),\n    ...(customChainConfig || {}),\n  };\n  if (name === WALLET_ADAPTERS.TORUS_EVM) {\n    const { TorusWalletAdapter } = await import(\"@web3auth/torus-evm-adapter\");\n    const adapter = new TorusWalletAdapter({ chainConfig: finalChainConfig, clientId, sessionTime, web3AuthNetwork });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.TORUS_SOLANA) {\n    const { SolanaWalletAdapter } = await import(\"@web3auth/torus-solana-adapter\");\n    const adapter = new SolanaWalletAdapter({ chainConfig: finalChainConfig, clientId, sessionTime, web3AuthNetwork });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.METAMASK) {\n    const { MetamaskAdapter } = await import(\"@web3auth/metamask-adapter\");\n    const adapter = new MetamaskAdapter({ chainConfig: finalChainConfig, clientId, sessionTime, web3AuthNetwork });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.PHANTOM) {\n    const { PhantomAdapter } = await import(\"@web3auth/phantom-adapter\");\n    const adapter = new PhantomAdapter({ chainConfig: finalChainConfig, clientId, sessionTime, web3AuthNetwork });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.WALLET_CONNECT_V1) {\n    const { WalletConnectV1Adapter } = await import(\"@web3auth/wallet-connect-v1-adapter\");\n    const adapter = new WalletConnectV1Adapter({ chainConfig: finalChainConfig, clientId, sessionTime, web3AuthNetwork });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.OPENLOGIN) {\n    const { OpenloginAdapter, getOpenloginDefaultOptions } = await import(\"@web3auth/openlogin-adapter\");\n    const defaultOptions = getOpenloginDefaultOptions();\n    const adapter = new OpenloginAdapter({\n      ...defaultOptions,\n      clientId,\n      chainConfig: { ...finalChainConfig },\n      adapterSettings: { ...(defaultOptions.adapterSettings as OpenLoginOptions), clientId, network: web3AuthNetwork },\n      sessionTime,\n      web3AuthNetwork,\n    });\n    return adapter;\n  }\n  throw new Error(\"Invalid wallet adapter name\");\n};\n","interface NavigatorLanguage {\n  userLanguage?: string;\n}\n\nexport const languageMap = {\n  en: \"english\",\n  de: \"german\",\n  ja: \"japanese\",\n  ko: \"korean\",\n  zh: \"mandarin\",\n  es: \"spanish\",\n  fr: \"french\",\n  pt: \"portuguese\",\n};\n\nexport const getUserLanguage = (defaultLanguage: string | undefined) => {\n  let userLanguage = defaultLanguage;\n  if (!userLanguage) {\n    const browserLanguage =\n      typeof window !== \"undefined\" ? (window.navigator as NavigatorLanguage).userLanguage || window.navigator.language || \"en-US\" : \"en-US\";\n    userLanguage = browserLanguage.split(\"-\")[0];\n  }\n  return Object.prototype.hasOwnProperty.call(languageMap, userLanguage) ? userLanguage : \"en\";\n};\n","import {\n  ADAPTER_CATEGORY,\n  ADAPTER_EVENTS,\n  ADAPTER_STATUS,\n  BaseAdapterConfig,\n  CHAIN_NAMESPACES,\n  CustomChainConfig,\n  getChainConfig,\n  log,\n  LoginMethodConfig,\n  SafeEventEmitterProvider,\n  WALLET_ADAPTER_TYPE,\n  WALLET_ADAPTERS,\n} from \"@web3auth/base\";\nimport { Web3AuthCore, Web3AuthCoreOptions } from \"@web3auth/core\";\nimport { getAdapterSocialLogins, LOGIN_MODAL_EVENTS, LoginModal, OPENLOGIN_PROVIDERS, UIConfig } from \"@web3auth/ui\";\n\nimport {\n  defaultEvmDappModalConfig,\n  defaultEvmWalletModalConfig,\n  defaultOtherModalConfig,\n  defaultSolanaDappModalConfig,\n  defaultSolanaWalletModalConfig,\n} from \"./config\";\nimport { getDefaultAdapterModule } from \"./default\";\nimport { AdaptersModalConfig, IWeb3AuthModal, ModalConfig } from \"./interface\";\nimport { getUserLanguage } from \"./utils\";\n\nexport interface Web3AuthOptions extends Web3AuthCoreOptions {\n  /**\n   * web3auth instance provides different adapters for different type of usages. If you are dapp and want to\n   * use external wallets like metamask, then you can use the `DAPP` authMode.\n   * If you are a wallet and only want to use you own wallet implementations along with openlogin,\n   * then you should use `WALLET` authMode.\n   *\n   * @defaultValue `DAPP`\n   */\n  authMode?: \"DAPP\" | \"WALLET\";\n  /**\n   * Config for configuring modal ui display properties\n   */\n  uiConfig?: Omit<UIConfig, \"adapterListener\">;\n}\n\nexport class Web3Auth extends Web3AuthCore implements IWeb3AuthModal {\n  public loginModal: LoginModal;\n\n  readonly options: Web3AuthOptions;\n\n  private modalConfig: AdaptersModalConfig = defaultEvmDappModalConfig;\n\n  constructor(options: Web3AuthOptions) {\n    super(options);\n    this.options = { ...options };\n    const providedChainConfig = this.options.chainConfig;\n    if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n      if (options.authMode === \"WALLET\") {\n        // default config for solana wallet modal\n        this.modalConfig = defaultSolanaWalletModalConfig;\n      } else {\n        // default config for solana dapp modal\n        this.modalConfig = defaultSolanaDappModalConfig;\n      }\n    } else if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.EIP155) {\n      if (options.authMode === \"WALLET\") {\n        // default config for evm wallet modal\n        this.modalConfig = defaultEvmWalletModalConfig;\n      } else {\n        // default config for evm dapp modal\n        this.modalConfig = defaultEvmDappModalConfig;\n      }\n    } else if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.OTHER) {\n      this.modalConfig = defaultOtherModalConfig;\n    } else {\n      throw new Error(`Invalid chainNamespace provided: ${providedChainConfig.chainNamespace}`);\n    }\n\n    // get userLanguage\n    const defaultLanguage = getUserLanguage(this.options.uiConfig?.defaultLanguage);\n\n    this.loginModal = new LoginModal({\n      theme: this.options.uiConfig?.theme,\n      appName: this.options.uiConfig?.appName || \"blockchain\",\n      appLogo: this.options.uiConfig?.appLogo || \"\",\n      adapterListener: this,\n      displayErrorsOnModal: this.options.uiConfig?.displayErrorsOnModal,\n      defaultLanguage,\n      modalZIndex: this.options.uiConfig?.modalZIndex || \"99998\",\n    });\n    this.subscribeToLoginModalEvents();\n  }\n\n  public async initModal(params?: { modalConfig?: Record<WALLET_ADAPTER_TYPE, ModalConfig> }): Promise<void> {\n    super.checkInitRequirements();\n    await this.loginModal.initModal();\n    const providedChainConfig = this.options.chainConfig;\n\n    // merge default adapters with the custom configured adapters.\n    const allAdapters = [...new Set([...Object.keys(this.modalConfig.adapters || {}), ...Object.keys(this.walletAdapters)])];\n\n    const adapterConfigurationPromises = allAdapters.map(async (adapterName) => {\n      // start with the default config of adapter.\n      let adapterConfig = this.modalConfig.adapters?.[adapterName] || {\n        label: adapterName,\n        showOnModal: true,\n        showOnMobile: true,\n        showOnDesktop: true,\n      };\n\n      // override the default config of adapter if some config is being provided by the user.\n      if (params?.modalConfig?.[adapterName]) {\n        adapterConfig = { ...adapterConfig, ...params.modalConfig[adapterName] };\n      }\n      (this.modalConfig.adapters as Record<WALLET_ADAPTER_TYPE, ModalConfig>)[adapterName] = adapterConfig as ModalConfig;\n\n      // check if adapter is configured/added by user and exist in walletAdapters map.\n      const adapter = this.walletAdapters[adapterName];\n      log.debug(\"adapter config\", adapterName, this.modalConfig.adapters?.[adapterName].showOnModal, adapter);\n\n      // if adapter is not custom configured then check if it is available in default adapters.\n      // and if adapter is not hidden by user\n      if (!adapter && this.modalConfig.adapters?.[adapterName].showOnModal) {\n        // if adapter is not configured and some default configuration is available, use it.\n        const ad = await getDefaultAdapterModule({\n          name: adapterName,\n          customChainConfig: this.options.chainConfig,\n          clientId: this.options.clientId,\n          sessionTime: this.options.sessionTime,\n          web3AuthNetwork: this.options.web3AuthNetwork,\n        });\n\n        this.walletAdapters[adapterName] = ad;\n\n        return adapterName;\n      } else if (adapter?.type === ADAPTER_CATEGORY.IN_APP || adapter?.type === ADAPTER_CATEGORY.EXTERNAL || adapterName === this.cachedAdapter) {\n        if (!this.modalConfig.adapters?.[adapterName].showOnModal) return;\n        // add client id to adapter, same web3auth client id can be used in adapter.\n        // this id is being overridden if user is also passing client id in adapter's constructor.\n        this.walletAdapters[adapterName].setAdapterSettings({\n          clientId: this.options.clientId,\n          sessionTime: this.options.sessionTime,\n          web3AuthNetwork: this.options.web3AuthNetwork,\n        });\n\n        // if adapter doesn't have any chainConfig then we will set the chainConfig based of passed chainNamespace\n        // and chainNamespace.\n        if (!adapter.chainConfigProxy) {\n          const chainConfig = {\n            ...getChainConfig(providedChainConfig.chainNamespace, this.coreOptions.chainConfig?.chainId),\n            ...this.coreOptions.chainConfig,\n          } as CustomChainConfig;\n          this.walletAdapters[adapterName].setAdapterSettings({ chainConfig });\n        }\n\n        return adapterName;\n      }\n    });\n\n    const adapterNames = await Promise.all(adapterConfigurationPromises);\n    const hasInAppWallets = Object.values(this.walletAdapters).some((adapter) => {\n      if (adapter.type !== ADAPTER_CATEGORY.IN_APP) return false;\n      if (this.modalConfig.adapters?.[adapter.name]?.showOnModal !== true) return false;\n      if (!this.modalConfig.adapters?.[adapter.name]?.loginMethods) return true;\n      const mergedLoginMethods = getAdapterSocialLogins(\n        adapter.name,\n        this.walletAdapters[adapter.name],\n        (this.modalConfig.adapters as Record<WALLET_ADAPTER_TYPE, ModalConfig>)[adapter.name]?.loginMethods\n      );\n      if (Object.values(mergedLoginMethods).some((method: LoginMethodConfig[keyof LoginMethodConfig]) => method.showOnModal)) return true;\n      return false;\n    });\n    log.debug(hasInAppWallets, this.walletAdapters, \"hasInAppWallets\");\n    // Now, initialize the adapters.\n    const initPromises = adapterNames.map(async (adapterName) => {\n      if (!adapterName) return;\n      try {\n        const adapter = this.walletAdapters[adapterName];\n        // only initialize a external adapter here if it is a cached adapter.\n        if (this.cachedAdapter !== adapterName && adapter.type === ADAPTER_CATEGORY.EXTERNAL) {\n          return;\n        }\n        // in-app wallets or cached wallet (being connected or already connected) are initialized first.\n        // if adapter is configured thn only initialize in app or cached adapter.\n        // external wallets are initialized on INIT_EXTERNAL_WALLET event.\n        this.subscribeToAdapterEvents(adapter);\n        if (adapter.status === ADAPTER_STATUS.NOT_READY) await adapter.init({ autoConnect: this.cachedAdapter === adapterName });\n        // note: not adding cachedWallet to modal if it is external wallet.\n        // adding it later if no in-app wallets are available.\n        if (adapter.type === ADAPTER_CATEGORY.IN_APP) {\n          this.initializeInAppWallet(adapterName);\n        }\n      } catch (error) {\n        log.error(error, \"error while initializing adapter\");\n      }\n    });\n\n    this.status = ADAPTER_STATUS.READY;\n    await Promise.all(initPromises);\n\n    const hasExternalWallets = allAdapters.some((adapterName) => {\n      return this.walletAdapters[adapterName]?.type === ADAPTER_CATEGORY.EXTERNAL && this.modalConfig.adapters?.[adapterName].showOnModal;\n    });\n\n    if (hasExternalWallets) {\n      this.loginModal.initExternalWalletContainer();\n    }\n\n    // variable to check if we have any in app wallets\n    // currently all default in app and external wallets can be hidden or shown based on config.\n    if (!hasInAppWallets && hasExternalWallets) {\n      // if no in app wallet is available then initialize external wallets in modal\n      await this.initExternalWalletAdapters(false, { showExternalWalletsOnly: true });\n    }\n  }\n\n  public async connect(): Promise<SafeEventEmitterProvider | null> {\n    // if (!this.loginModal.initialized) throw new Error(\"Login modal is not initialized\");\n    // if already connected return provider\n    if (this.provider) return this.provider;\n    this.loginModal.open();\n    return new Promise((resolve, reject) => {\n      this.once(ADAPTER_EVENTS.CONNECTED, () => {\n        return resolve(this.provider);\n      });\n      this.once(ADAPTER_EVENTS.ERRORED, (err: unknown) => {\n        return reject(err);\n      });\n    });\n  }\n\n  private async initExternalWalletAdapters(externalWalletsInitialized: boolean, options?: { showExternalWalletsOnly: boolean }): Promise<void> {\n    if (externalWalletsInitialized) return;\n    const adaptersConfig: Record<string, BaseAdapterConfig> = {};\n    Object.keys(this.walletAdapters).forEach(async (adapterName) => {\n      const adapter = this.walletAdapters[adapterName];\n      if (adapter?.type === ADAPTER_CATEGORY.EXTERNAL) {\n        log.debug(\"init external wallet\", this.cachedAdapter, adapterName);\n        this.subscribeToAdapterEvents(adapter);\n        // we are not initializing cached adapter here as it is already being initialized in initModal before.\n        if (this.cachedAdapter === adapterName) {\n          return;\n        }\n        if (adapter.status === ADAPTER_STATUS.NOT_READY)\n          await adapter\n            .init({ autoConnect: this.cachedAdapter === adapterName })\n            .then(() => {\n              adaptersConfig[adapterName] = (this.modalConfig.adapters as Record<WALLET_ADAPTER_TYPE, ModalConfig>)[adapterName];\n              this.loginModal.addWalletLogins(adaptersConfig, { showExternalWalletsOnly: !!options?.showExternalWalletsOnly });\n              return undefined;\n            })\n            .catch((error) => log.error(error, \"error while initializing adapter\"));\n      }\n    });\n  }\n\n  private initializeInAppWallet(adapterName: string): void {\n    log.info(\"adapterInitResults\", adapterName);\n    if (this.walletAdapters[adapterName].type === ADAPTER_CATEGORY.IN_APP) {\n      this.loginModal.addSocialLogins(\n        adapterName,\n        getAdapterSocialLogins(\n          adapterName,\n          this.walletAdapters[adapterName],\n          (this.modalConfig.adapters as Record<WALLET_ADAPTER_TYPE, ModalConfig>)[adapterName]?.loginMethods\n        ),\n        this.options.uiConfig?.loginMethodsOrder || OPENLOGIN_PROVIDERS\n      );\n    }\n  }\n\n  private subscribeToLoginModalEvents(): void {\n    this.loginModal.on(LOGIN_MODAL_EVENTS.LOGIN, async (params: { adapter: WALLET_ADAPTER_TYPE; loginParams: unknown }) => {\n      try {\n        await this.connectTo<unknown>(params.adapter, params.loginParams);\n      } catch (error) {\n        log.error(`Error while connecting to adapter: ${params.adapter}`, error);\n      }\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.INIT_EXTERNAL_WALLETS, async (params: { externalWalletsInitialized: boolean }) => {\n      await this.initExternalWalletAdapters(params.externalWalletsInitialized);\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.DISCONNECT, async () => {\n      try {\n        await this.logout();\n      } catch (error) {\n        log.error(`Error while disconnecting`, error);\n      }\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.MODAL_VISIBILITY, async (visibility: boolean) => {\n      log.debug(\"is login modal visible\", visibility);\n      this.emit(LOGIN_MODAL_EVENTS.MODAL_VISIBILITY, visibility);\n      const walletConnectStatus = this.walletAdapters[WALLET_ADAPTERS.WALLET_CONNECT_V1]?.status;\n      if (visibility && walletConnectStatus === ADAPTER_STATUS.READY) {\n        // refreshing session for wallet connect whenever modal is opened.\n        try {\n          this.walletAdapters[WALLET_ADAPTERS.WALLET_CONNECT_V1].connect();\n        } catch (error) {\n          log.error(`Error while disconnecting to wallet connect in core`, error);\n        }\n      }\n    });\n  }\n}\n","module.exports = require(\"@web3auth/base\");","module.exports = require(\"@web3auth/metamask-adapter\");","module.exports = require(\"@web3auth/openlogin-adapter\");","module.exports = require(\"@web3auth/phantom-adapter\");","module.exports = require(\"@web3auth/torus-evm-adapter\");","module.exports = require(\"@web3auth/torus-solana-adapter\");","module.exports = require(\"@web3auth/wallet-connect-v1-adapter\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from \"./config\";\nexport * from \"./interface\";\nexport * from \"./modalManager\";\n"],"names":["CHAIN_NAMESPACES","EVM_ADAPTERS","SOLANA_ADAPTERS","defaultSolanaDappModalConfig","chainNamespace","SOLANA","adapters","TORUS_SOLANA","label","showOnModal","showOnMobile","showOnDesktop","OPENLOGIN","PHANTOM","defaultEvmDappModalConfig","EIP155","TORUS_EVM","METAMASK","WALLET_CONNECT_V1","defaultSolanaWalletModalConfig","defaultEvmWalletModalConfig","defaultOtherModalConfig","OTHER","getChainConfig","WALLET_ADAPTERS","getDefaultAdapterModule","params","name","customChainConfig","clientId","sessionTime","web3AuthNetwork","Object","values","includes","Error","finalChainConfig","chainId","TorusWalletAdapter","adapter","chainConfig","SolanaWalletAdapter","MetamaskAdapter","PhantomAdapter","WalletConnectV1Adapter","OpenloginAdapter","getOpenloginDefaultOptions","defaultOptions","adapterSettings","network","languageMap","en","de","ja","ko","zh","es","fr","pt","getUserLanguage","defaultLanguage","userLanguage","browserLanguage","window","navigator","language","split","prototype","hasOwnProperty","call","ADAPTER_CATEGORY","ADAPTER_EVENTS","ADAPTER_STATUS","log","Web3AuthCore","getAdapterSocialLogins","LOGIN_MODAL_EVENTS","LoginModal","OPENLOGIN_PROVIDERS","Web3Auth","constructor","options","providedChainConfig","authMode","modalConfig","uiConfig","loginModal","theme","appName","appLogo","adapterListener","displayErrorsOnModal","modalZIndex","subscribeToLoginModalEvents","initModal","checkInitRequirements","allAdapters","Set","keys","walletAdapters","adapterConfigurationPromises","map","adapterName","adapterConfig","debug","ad","type","IN_APP","EXTERNAL","cachedAdapter","setAdapterSettings","chainConfigProxy","coreOptions","adapterNames","Promise","all","hasInAppWallets","some","loginMethods","mergedLoginMethods","method","initPromises","subscribeToAdapterEvents","status","NOT_READY","init","autoConnect","initializeInAppWallet","error","READY","hasExternalWallets","initExternalWalletContainer","initExternalWalletAdapters","showExternalWalletsOnly","connect","provider","open","resolve","reject","once","CONNECTED","ERRORED","err","externalWalletsInitialized","adaptersConfig","forEach","then","addWalletLogins","undefined","catch","info","addSocialLogins","loginMethodsOrder","on","LOGIN","connectTo","loginParams","INIT_EXTERNAL_WALLETS","DISCONNECT","logout","MODAL_VISIBILITY","visibility","emit","walletConnectStatus"],"sourceRoot":""}